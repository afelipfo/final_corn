[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "corn-diseases-detection"
version = "0.1.0"
description = "Sistema de Deep Learning para clasificación de enfermedades en hojas de maíz usando Transfer Learning"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}

keywords = [
    "deep-learning",
    "computer-vision",
    "transfer-learning",
    "image-classification",
    "agriculture",
    "corn-diseases",
    "tensorflow",
    "keras"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
]

dependencies = [
    "tensorflow>=2.10.0,<2.11.0",
    "keras>=2.10.0,<2.11.0",
    "keras-tuner>=1.4.7",
    "mlflow>=3.3.0",
    "opencv-python>=4.12.0",
    "pillow>=11.0.0",
    "numpy>=1.23.5,<2.0.0",
    "pandas>=2.3.0",
    "scikit-learn>=1.7.0",
    "scipy>=1.15.0",
    "matplotlib>=3.10.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-cov>=6.0.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.1.0",
    "mypy>=1.13.0",
    "pre-commit>=3.6.0",
    "pydocstyle>=6.3.0",
    "detect-secrets>=1.4.0",
    "nbstripout>=0.7.0",
    "ipykernel",
]

api = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
]

all = [
    "corn-diseases-detection[dev,api]",
]

[project.urls]
Homepage = "https://github.com/ojgonzalezz/corn-diseases-detection"
Repository = "https://github.com/ojgonzalezz/corn-diseases-detection.git"
Issues = "https://github.com/ojgonzalezz/corn-diseases-detection/issues"

[project.scripts]
corn-train = "src.pipelines.train:main"
corn-infer = "src.pipelines.infer:main"
corn-preprocess = "src.pipelines.preprocess:main"

[tool.setuptools]
packages = ["src", "src.adapters", "src.builders", "src.core", "src.pipelines", "src.utils"]

[tool.setuptools.package-data]
src = ["core/.env"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marca tests que tardan mucho tiempo",
    "integration: marca tests de integración",
    "unit: marca tests unitarios",
    "gpu: marca tests que requieren GPU",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/experimentation/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | data
  | models
  | mlruns
)/
'''

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true
known_first_party = ["src"]
known_third_party = ["tensorflow", "keras", "numpy", "pandas", "sklearn", "cv2", "PIL"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "silent"

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "tensorflow.*",
    "keras.*",
    "keras_tuner.*",
    "mlflow.*",
    "sklearn.*",
    "scipy.*",
]
ignore_missing_imports = true
